#define __AVR_ATmega2560__

#include <avr/io.h>
#include <avr/common.h>
#include <avr/interrupt.h>
#define F_CPU 16000000UL
#define MAX_SPEED 3199


int main() {
  initMotors();

  // выставляем скорости моторам
  setMotorVelocity( -3000, &OCR3B, &PORTL, PL0);
  setMotorVelocity( -3000, &OCR3C, &PORTB, PB2);
}

void initMotors()
{
  // отключение прерываний
  cli();

  // Настройка ножек на выход
  DDRE |= (1 << PE4) | (1 << PE5);

  DDRL |= (1 << PL0); // правое: 49 пин
  DDRB |= (1 << PB2); // левое:51 пин

  // Работаем с таймером номер 3
  // выбираем режим работы FAST PWM (TOP = ICR3)
  TCCR3A = (1 << WGM31);
  TCCR3B = (1 << WGM32) | (1 << WGM33);

  // неинвертированный режим работы на каналах B и C
  TCCR3A |= (1 << COM3B1) | (1 << COM3C1);

  // настройка пределителя (prescaling) clk/1
  TCCR3B |= 1 << CS30;

  // записываем TOP value, таймер считает от 0 до TOP
  ICR3 = 3199;

  // Заполняем ШИМ (duty cycle) (от 0 до TOP)
  OCR3B = 0;
  OCR3C = 0;

  // разрешаем прерывания
  sei();
}

void setMotorVelocity(
    short int velocity,
    volatile uint16_t *OCRreg,
    volatile uint8_t *PORTreg,
    byte PORTx)
{
  if (velocity > MAX_SPEED or velocity < -MAX_SPEED)
    return;

  if (velocity >= 0)
  {
    // заполнение ШИМ (duty cycle) (от 0 до top)
    *OCRreg = velocity;
    *PORTreg = (*PORTreg) & ~(1 << PORTx);
  }
  else
  {
    // заполнение ШИМ (duty cycle) (от 0 до top)
    *OCRreg = 3199 + velocity;
    *PORTreg = (*PORTreg) | (1 << PORTx);
  }
}
